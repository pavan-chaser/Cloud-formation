---
- name: VPC Wizard Two Setup
  hosts: localhost

  tasks:
  
  - ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr_block }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
    register: my_vpc

  - name: Set VPC ID in variable
    set_fact:
      vpc_id: "{{ my_vpc.vpc.id }}"

  - name: degug vpc name
    debug:
      msg: "{{ my_vpc }}"

  - name: Create Public Subnet
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ public_subnet_1_cidr }}"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Public Subnet"
    register: my_public_subnet

  - name: Set Public Subnet ID in variable
    set_fact:
      public_subnet_id: "{{ my_public_subnet.subnet.id }}"
    
  - name: degug Public Subnet name
    debug:
      msg: "{{ my_public_subnet }}"

  - name: Create Private Subnet
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ private_subnet_1_cidr }}"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Private Subnet"
    register: my_private_subnet

  - name: Set Private Subnet ID in variable
    set_fact:
      private_subnet_id: "{{ my_private_subnet.subnet.id }}"

  - name: degug Private Subnet name
    debug:
      msg: "{{ my_private_subnet }}"

  - name: Create Internet Gateway for VPC
    ec2_vpc_igw:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
    register: my_vpc_igw
    
  - name: Set Internet Gateway ID in variable
    set_fact:
      igw_id: "{{ my_vpc_igw.gateway_id }}"

  - name: degug IGW name
    debug:
      msg: "{{ my_vpc_igw }}"

  - name: Setup AWS CLI aws_access_key
    shell: >
      aws configure set aws_access_key_id "{{ aws_access_key }}"

  - name: Setup AWS CLI aws_secret_key
    shell: >
      aws configure set aws_secret_access_key "{{ aws_secret_key }}"

  - name: Setup AWS CLI aws_region
    shell: >
      aws configure set region {{ aws_region }}

  - name: Create Elastic IP
    shell: >
      aws ec2 allocate-address --domain vpc --query AllocationId | tr -d '"'
    register: eip

  - debug: var=eip

  - name: Set EIP in variable
    set_fact:
      my_elastic_ip: "{{ eip.stdout }}"

  - name: Create NAT Gateway
    shell: >
      aws ec2 create-nat-gateway \
      --subnet-id {{ public_subnet_id }} \
      --allocation-id {{ my_elastic_ip }} \
      --query NatGateway.NatGatewayId | tr -d '"'
    register: my_nat_gateway

  - name: Set Nat Gateway ID in variable
    set_fact:
      nat_gateway_id: "{{ my_nat_gateway.stdout }}"

  - name: degug NAT Gateway name
    debug:
      msg: "{{ my_nat_gateway }}"
    
  - pause: seconds=5

  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "Public"
      subnets:
        - "{{ public_subnet_id }}"
      routes:
        - dest: "0.0.0.0/0"
          gateway_id: "{{ igw_id }}"

  - name: Set up private subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "Private"
      subnets:
        - "{{ private_subnet_id }}"
      routes:
        - dest: "0.0.0.0/0"
          gateway_id: "{{ nat_gateway_id }}"

  - name: Create Main Security Group
    ec2_group:
      name: "External SSH Access"
      description: "External SSH Access"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: "tcp"
          from_port: "22"
          to_port: "22"
          cidr_ip: "{{ my_ip }}/32"
    register: my_main_sg

  - name: Set Main SG ID
    set_fact:
      main_sg_id: "{{ my_main_sg.group_id }}"

  - name: degug NAT Gateway name
    debug:
      msg: "{{ my_main_sg }}"
    
  - name: Create Private Security Group
    ec2_group:
      name: "Private Instances SG"
      description: "Private Instances SG"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: "tcp"
          from_port: "22"
          to_port: "22"
          group_id: "{{ main_sg_id }}"