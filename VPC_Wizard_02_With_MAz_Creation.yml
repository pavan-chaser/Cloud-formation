---
- name: VPC Wizard Two with MAz Setup
  hosts: localhost

  tasks:
  
  - ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr_block }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
    register: my_vpc

  - name: Set VPC ID in variable
    set_fact:
      vpc_id: "{{ my_vpc.vpc.id }}"
      
  - name: degug vpc name
    debug:
      msg: "{{ my_vpc }}"
      
  - name: Create Public Subnet Az1
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ public_subnet_1_cidr_az1 }}"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Public Subnet Az1"
    register: my_public_subnet_az1

  - name: Set Public Subnet ID az1 in variable
    set_fact:
      public_subnet_az1_id: "{{ my_public_subnet_az1.subnet.id }}"
    
  - name: degug Public Subnet az1 name
    debug:
      msg: "{{ my_public_subnet_az1 }}"
  
  - name: Create Private Subnet Az1
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ private_subnet_1_cidr_az1 }}"
      az: "{{ aws_region }}a"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Private Subnet Az1"
    register: my_private_subnet_az1

  - name: Set Private Subnet ID az1 in variable
    set_fact:
      private_subnet_az1_id: "{{ my_private_subnet_az1.subnet.id }}"

  - name: degug Private Subnet az1 name
    debug:
      msg: "{{ my_private_subnet_az1 }}"
   
  - name: Create Public Subnet Az2
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ public_subnet_1_cidr_az2 }}"
      az: "{{ aws_region }}b"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Public Subnet Az2"
    register: my_public_subnet_az2

  - name: Set Public Subnet ID az2 in variable
    set_fact:
      public_subnet_az2_id: "{{ my_public_subnet_az2.subnet.id }}"
    
  - name: degug Public Subnet az2 name
    debug:
      msg: "{{ my_public_subnet_az2 }}"
  
  - name: Create Private Subnet Az2
    ec2_vpc_subnet:
      state: "present"
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ private_subnet_1_cidr_az2 }}"
      az: "{{ aws_region }}b"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource_tags:
        Name: "Private Subnet Az2"
    register: my_private_subnet_az2

  - name: Set Private Subnet ID az2 in variable
    set_fact:
      private_subnet_az2_id: "{{ my_private_subnet_az2.subnet.id }}"

  - name: degug Private Subnet az2 name
    debug:
      msg: "{{ my_private_subnet_az2 }}"
  
  - name: Create Internet Gateway for VPC
    ec2_vpc_igw:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: "present"
    register: my_vpc_igw
    
  - name: Set Internet Gateway ID in variable
    set_fact:
      igw_id: "{{ my_vpc_igw.gateway_id }}"

  - name: degug IGW name
    debug:
      msg: "{{ my_vpc_igw }}"
  
  - name: Setup AWS CLI aws_access_key
    shell: >
      aws configure set aws_access_key_id "{{ aws_access_key }}"

  - name: Setup AWS CLI aws_secret_key
    shell: >
      aws configure set aws_secret_access_key "{{ aws_secret_key }}"

  - name: Setup AWS CLI aws_region
    shell: >
      aws configure set region "{{ aws_region }}"

  - name: Create Elastic IP Az1
    shell: >
      aws ec2 allocate-address --domain vpc --query AllocationId | tr -d '"'
    register: my_eip_az1

  - name: Set EIP in variable
    set_fact:
      my_elastic_ip_az1: "{{ my_eip_az1.stdout }}"

  - debug: var=my_eip_az1
  
  - name: Create Elastic IP Az2
    shell: >
      aws ec2 allocate-address --domain vpc --query AllocationId | tr -d '"'
    register: my_eip_az2

  - debug: var=my_eip_az2

  - name: Set EIP in variable
    set_fact:
      my_elastic_ip_az2: "{{ my_eip_az2.stdout }}"
 
  - pause: seconds=10

  - name: Create NAT Gateway az1
    shell: >
      aws ec2 create-nat-gateway \
      --subnet-id {{ public_subnet_az1_id }} \
      --allocation-id {{ my_elastic_ip_az1 }} \
      --query NatGateway.NatGatewayId | tr -d '"'
    register: my_nat_gateway_az1

  - name: Set Nat Gateway ID in variable az1
    set_fact:
      nat_gateway_az1_id: "{{ my_nat_gateway_az1.stdout }}"
    
  - name: degug NAT Gateway name az1
    debug:
      msg: "{{ my_nat_gateway_az1 }}"

  - pause: seconds=10
  
  - name: Create NAT Gateway az2
    shell: >
      aws ec2 create-nat-gateway \
      --subnet-id {{ public_subnet_az2_id }} \
      --allocation-id {{ my_elastic_ip_az2 }} \
      --query NatGateway.NatGatewayId | tr -d '"'
    register: my_nat_gateway_az2

  - name: Set Nat Gateway ID in variable az2
    set_fact:
       nat_gateway_az2_id: "{{ my_nat_gateway_az2.stdout }}"

  - name: degug NAT Gateway name az2
    debug:
      msg: "{{ my_nat_gateway_az2 }}"

  - pause: seconds=10
  
  - name: Set up public subnet route table igw
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
         Name: "Public"
      subnets:
         - "{{ public_subnet_az1_id }}"
         - "{{ public_subnet_az2_id }}"
      routes:
         - dest: "0.0.0.0/0"
           gateway_id: "{{ igw_id }}"
    register: my_public_route_table_igw

  - name: degug public subnet route table igw
    debug:
      msg: "{{ my_public_route_table_igw }}"
      
  - name: Set up private subnet route table [AZ-1]
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
         Name: "Private 1"
      subnets:
         - "{{ private_subnet_az1_id }}"
      routes:
         - dest: "0.0.0.0/0"
           gateway_id: "{{ nat_gateway_az1_id }}"
    register: my_public_route_table_nat_az1

  - name: degug private subnet route table nat az1
    debug:
      msg: "{{ my_public_route_table_nat_az1 }}"
      
  - name: Set up private subnet route table [AZ-2]
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "Private 2"
      subnets:
         - "{{ private_subnet_az2_id }}"
      routes:
         - dest: "0.0.0.0/0"
           gateway_id: "{{ nat_gateway_az2_id }}"
    register: my_public_route_table_nat_az2

  - name: degug private subnet route table nat az2
    debug:
      msg: "{{ my_public_route_table_nat_az2 }}"
  
  - name: Create Main Security Group
    ec2_group:
      name: "External SSH Access"
      description: "External SSH Access"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
       - proto: "tcp"
         from_port: "22"
         to_port: "22"
         cidr_ip: "{{ my_ip }}/32"
    register: my_main_sg

  - name: Set Main SG ID
    set_fact:
      main_sg_id: "{{ my_main_sg.group_id }}"

  - name: degug External SSH Access
    debug:
      msg: "{{ my_main_sg }}"
      
  - name: Create Private Security Group
    ec2_group:
      name: "Private Instances SG"
      description: "Private Instances SG"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: "tcp"
          from_port: "22"
          to_port: "22"
          group_id: "{{ main_sg_id }}"
    register: my_private_sg

  - name: Set Private SG ID
    set_fact:
      main_sg_id: "{{ my_private_sg.group_id }}"

  - name: degug Private SSH Access
    debug:
      msg: "{{ my_private_sg }}"